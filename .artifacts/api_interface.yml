- type: Backend
  id: API-POST-Login
  route: POST /api/auth/login
  description: 处理用户登录请求，验证用户名/邮箱/手机号和密码。
  input:
    type: JSON
    body:
      loginId: string  # 用户名/邮箱/手机号
      password: string  # 密码
  output:
    success:
      statusCode: 200
      body: 
        success: true
        message: "登录验证成功，需要短信验证"
        data:
          userId: "uuid"
          sessionToken: "jwt"
          requireSmsVerification: true
    error:
      - statusCode: 400
        body: { success: false, message: "请输入用户名！" }
      - statusCode: 400
        body: { success: false, message: "请输入密码！" }
      - statusCode: 400
        body: { success: false, message: "密码长度不能少于6位！" }
      - statusCode: 401
        body: { success: false, message: "用户名或密码错误！" }
  dependencies:
    - DB-FindUserByUsername
    - DB-VerifyUserPassword
  acceptanceCriteria:
    - 当用户名和密码都正确时，返回200状态码和会话令牌。
    - 当用户名或密码为空时，返回400状态码和相应错误信息。
    - 当用户名或密码错误时，返回401状态码。
    - 成功验证后需要进行短信验证。
  changeLog:
    - date: "2025-01-25"
      description: "初始创建。"

- type: Backend
  id: API-POST-SendSmsCode
  route: POST /api/auth/send-sms-code
  description: 发送短信验证码到用户绑定的手机号。
  input:
    type: JSON
    body:
      sessionToken: string  # 登录会话令牌
      idCardLast4: string   # 证件号后4位
  output:
    success:
      statusCode: 200
      body: 
        success: true
        message: "获取短信验证码成功！"
        data:
          codeSent: true
    error:
      - statusCode: 400
        body: { success: false, message: "请输入正确的用户信息！" }
      - statusCode: 429
        body: { success: false, message: "请求验证码过于频繁，请稍后再试！" }
      - statusCode: 401
        body: { success: false, message: "会话已过期，请重新登录！" }
  dependencies:
    - DB-VerifyUserIdCard
    - DB-CheckVerificationCodeLimit
    - DB-GetUserPhoneNumber
    - DB-CreateVerificationCode
  acceptanceCriteria:
    - 当证件号后4位正确且未超过发送频率限制时，成功发送验证码。
    - 当证件号后4位错误时，返回400状态码。
    - 当1分钟内已发送过验证码时，返回429状态码。
    - 验证码发送到用户绑定的手机号。
  changeLog:
    - date: "2025-01-25"
      description: "初始创建。"

- type: Backend
  id: API-POST-VerifySmsCode
  route: POST /api/auth/verify-sms-code
  description: 验证短信验证码并完成登录流程。
  input:
    type: JSON
    body:
      sessionToken: string     # 登录会话令牌
      idCardLast4: string      # 证件号后4位
      verificationCode: string # 6位验证码
  output:
    success:
      statusCode: 200
      body: 
        success: true
        message: "登录成功"
        data:
          userId: "uuid"
          accessToken: "jwt"
          refreshToken: "jwt"
          userInfo:
            username: "string"
            email: "string"
            phone: "string"
    error:
      - statusCode: 400
        body: { success: false, message: "请输入登录账号绑定的证件号后4位" }
      - statusCode: 400
        body: { success: false, message: "请输入验证码" }
      - statusCode: 400
        body: { success: false, message: "请输入正确的验证码" }
      - statusCode: 400
        body: { success: false, message: "验证码校验失败！" }
      - statusCode: 400
        body: { success: false, message: "很抱歉，您输入的短信验证码有误。" }
      - statusCode: 401
        body: { success: false, message: "会话已过期，请重新登录！" }
  dependencies:
    - DB-VerifyVerificationCode
    - DB-UpdateUserLoginTime
  acceptanceCriteria:
    - 当证件号后4位和验证码都正确时，返回完整的用户信息和访问令牌。
    - 当证件号后4位为空时，返回相应错误信息。
    - 当验证码为空或格式错误时，返回相应错误信息。
    - 当验证码错误时，返回验证失败信息。
    - 成功验证后更新用户最后登录时间。
  changeLog:
    - date: "2025-01-25"
      description: "初始创建。"

- type: Backend
  id: API-GET-UserProfile
  route: GET /api/user/profile
  description: 获取用户个人信息，用于登录成功后跳转到个人中心。
  input:
    type: Headers
    headers:
      Authorization: "Bearer {accessToken}"
  output:
    success:
      statusCode: 200
      body: 
        success: true
        data:
          userId: "uuid"
          username: "string"
          email: "string"
          phone: "string"
          realName: "string"
          idCard: "string"
          lastLoginTime: "datetime"
    error:
      - statusCode: 401
        body: { success: false, message: "未授权访问" }
      - statusCode: 404
        body: { success: false, message: "用户不存在" }
  dependencies:
    - DB-FindUserByUsername
  acceptanceCriteria:
    - 当访问令牌有效时，返回用户完整信息。
    - 当访问令牌无效或过期时，返回401状态码。
    - 当用户不存在时，返回404状态码。
  changeLog:
    - date: "2025-01-25"
      description: "初始创建。"